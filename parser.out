Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMA
    EXTRN

Grammar

Rule 0     S' -> function
Rule 1     function -> MAIN LPAREN RPAREN LBRACE expression RBRACE
Rule 2     expression -> variable
Rule 3     expression -> expression expression
Rule 4     expression -> while
Rule 5     expression -> if
Rule 6     expression -> assigned
Rule 7     expression -> EPSILON
Rule 8     while -> WHILE LPAREN statement RPAREN LBRACE expression RBRACE
Rule 9     if -> IF LPAREN statement RPAREN LBRACE expression RBRACE
Rule 10    if -> IF LPAREN statement RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE
Rule 11    statement -> ID EQ ID
Rule 12    statement -> ID NOT_EQ ID
Rule 13    statement -> ID GREATER ID
Rule 14    statement -> ID GREATER_EQ ID
Rule 15    statement -> ID LESS ID
Rule 16    statement -> ID LESS_EQ ID
Rule 17    statement -> NUMBER EQ ID
Rule 18    statement -> NUMBER NOT_EQ ID
Rule 19    statement -> NUMBER GREATER ID
Rule 20    statement -> NUMBER GREATER_EQ ID
Rule 21    statement -> NUMBER LESS ID
Rule 22    statement -> NUMBER LESS_EQ ID
Rule 23    statement -> ID EQ NUMBER
Rule 24    statement -> ID NOT_EQ NUMBER
Rule 25    statement -> ID GREATER NUMBER
Rule 26    statement -> ID GREATER_EQ NUMBER
Rule 27    statement -> ID LESS NUMBER
Rule 28    statement -> ID LESS_EQ NUMBER
Rule 29    variable -> AUTO ID SEMICOLON
Rule 30    variable -> AUTO ID ASSIGN NUMBER SEMICOLON
Rule 31    variable -> AUTO ID ASSIGN STRING SEMICOLON
Rule 32    assigned -> ID ASSIGN NUMBER SEMICOLON
Rule 33    assigned -> ID ASSIGN STRING SEMICOLON

Terminals, with rules where they appear

ASSIGN               : 30 31 32 33
AUTO                 : 29 30 31
COMMA                : 
ELSE                 : 10
EPSILON              : 7
EQ                   : 11 17 23
EXTRN                : 
GREATER              : 13 19 25
GREATER_EQ           : 14 20 26
ID                   : 11 11 12 12 13 13 14 14 15 15 16 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33
IF                   : 9 10
LBRACE               : 1 8 9 10 10
LESS                 : 15 21 27
LESS_EQ              : 16 22 28
LPAREN               : 1 8 9 10
MAIN                 : 1
NOT_EQ               : 12 18 24
NUMBER               : 17 18 19 20 21 22 23 24 25 26 27 28 30 32
RBRACE               : 1 8 9 10 10
RPAREN               : 1 8 9 10
SEMICOLON            : 29 30 31 32 33
STRING               : 31 33
WHILE                : 8
error                : 

Nonterminals, with rules where they appear

assigned             : 6
expression           : 1 3 3 8 9 10 10
function             : 0
if                   : 5
statement            : 8 9 10
variable             : 2
while                : 4

Parsing method: LALR

state 0

    (0) S' -> . function
    (1) function -> . MAIN LPAREN RPAREN LBRACE expression RBRACE

    MAIN            shift and go to state 2

    function                       shift and go to state 1

state 1

    (0) S' -> function .



state 2

    (1) function -> MAIN . LPAREN RPAREN LBRACE expression RBRACE

    LPAREN          shift and go to state 3


state 3

    (1) function -> MAIN LPAREN . RPAREN LBRACE expression RBRACE

    RPAREN          shift and go to state 4


state 4

    (1) function -> MAIN LPAREN RPAREN . LBRACE expression RBRACE

    LBRACE          shift and go to state 5


state 5

    (1) function -> MAIN LPAREN RPAREN LBRACE . expression RBRACE
    (2) expression -> . variable
    (3) expression -> . expression expression
    (4) expression -> . while
    (5) expression -> . if
    (6) expression -> . assigned
    (7) expression -> . EPSILON
    (29) variable -> . AUTO ID SEMICOLON
    (30) variable -> . AUTO ID ASSIGN NUMBER SEMICOLON
    (31) variable -> . AUTO ID ASSIGN STRING SEMICOLON
    (8) while -> . WHILE LPAREN statement RPAREN LBRACE expression RBRACE
    (9) if -> . IF LPAREN statement RPAREN LBRACE expression RBRACE
    (10) if -> . IF LPAREN statement RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE
    (32) assigned -> . ID ASSIGN NUMBER SEMICOLON
    (33) assigned -> . ID ASSIGN STRING SEMICOLON

    EPSILON         shift and go to state 7
    AUTO            shift and go to state 11
    WHILE           shift and go to state 8
    IF              shift and go to state 6
    ID              shift and go to state 14

    assigned                       shift and go to state 9
    while                          shift and go to state 10
    variable                       shift and go to state 12
    expression                     shift and go to state 13
    if                             shift and go to state 15

state 6

    (9) if -> IF . LPAREN statement RPAREN LBRACE expression RBRACE
    (10) if -> IF . LPAREN statement RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE

    LPAREN          shift and go to state 16


state 7

    (7) expression -> EPSILON .

    RBRACE          reduce using rule 7 (expression -> EPSILON .)
    EPSILON         reduce using rule 7 (expression -> EPSILON .)
    AUTO            reduce using rule 7 (expression -> EPSILON .)
    WHILE           reduce using rule 7 (expression -> EPSILON .)
    IF              reduce using rule 7 (expression -> EPSILON .)
    ID              reduce using rule 7 (expression -> EPSILON .)


state 8

    (8) while -> WHILE . LPAREN statement RPAREN LBRACE expression RBRACE

    LPAREN          shift and go to state 17


state 9

    (6) expression -> assigned .

    RBRACE          reduce using rule 6 (expression -> assigned .)
    EPSILON         reduce using rule 6 (expression -> assigned .)
    AUTO            reduce using rule 6 (expression -> assigned .)
    WHILE           reduce using rule 6 (expression -> assigned .)
    IF              reduce using rule 6 (expression -> assigned .)
    ID              reduce using rule 6 (expression -> assigned .)


state 10

    (4) expression -> while .

    RBRACE          reduce using rule 4 (expression -> while .)
    EPSILON         reduce using rule 4 (expression -> while .)
    AUTO            reduce using rule 4 (expression -> while .)
    WHILE           reduce using rule 4 (expression -> while .)
    IF              reduce using rule 4 (expression -> while .)
    ID              reduce using rule 4 (expression -> while .)


state 11

    (29) variable -> AUTO . ID SEMICOLON
    (30) variable -> AUTO . ID ASSIGN NUMBER SEMICOLON
    (31) variable -> AUTO . ID ASSIGN STRING SEMICOLON

    ID              shift and go to state 18


state 12

    (2) expression -> variable .

    RBRACE          reduce using rule 2 (expression -> variable .)
    EPSILON         reduce using rule 2 (expression -> variable .)
    AUTO            reduce using rule 2 (expression -> variable .)
    WHILE           reduce using rule 2 (expression -> variable .)
    IF              reduce using rule 2 (expression -> variable .)
    ID              reduce using rule 2 (expression -> variable .)


state 13

    (1) function -> MAIN LPAREN RPAREN LBRACE expression . RBRACE
    (3) expression -> expression . expression
    (2) expression -> . variable
    (3) expression -> . expression expression
    (4) expression -> . while
    (5) expression -> . if
    (6) expression -> . assigned
    (7) expression -> . EPSILON
    (29) variable -> . AUTO ID SEMICOLON
    (30) variable -> . AUTO ID ASSIGN NUMBER SEMICOLON
    (31) variable -> . AUTO ID ASSIGN STRING SEMICOLON
    (8) while -> . WHILE LPAREN statement RPAREN LBRACE expression RBRACE
    (9) if -> . IF LPAREN statement RPAREN LBRACE expression RBRACE
    (10) if -> . IF LPAREN statement RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE
    (32) assigned -> . ID ASSIGN NUMBER SEMICOLON
    (33) assigned -> . ID ASSIGN STRING SEMICOLON

    RBRACE          shift and go to state 19
    EPSILON         shift and go to state 7
    AUTO            shift and go to state 11
    WHILE           shift and go to state 8
    IF              shift and go to state 6
    ID              shift and go to state 14

    assigned                       shift and go to state 9
    while                          shift and go to state 10
    variable                       shift and go to state 12
    expression                     shift and go to state 20
    if                             shift and go to state 15

state 14

    (32) assigned -> ID . ASSIGN NUMBER SEMICOLON
    (33) assigned -> ID . ASSIGN STRING SEMICOLON

    ASSIGN          shift and go to state 21


state 15

    (5) expression -> if .

    RBRACE          reduce using rule 5 (expression -> if .)
    EPSILON         reduce using rule 5 (expression -> if .)
    AUTO            reduce using rule 5 (expression -> if .)
    WHILE           reduce using rule 5 (expression -> if .)
    IF              reduce using rule 5 (expression -> if .)
    ID              reduce using rule 5 (expression -> if .)


state 16

    (9) if -> IF LPAREN . statement RPAREN LBRACE expression RBRACE
    (10) if -> IF LPAREN . statement RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE
    (11) statement -> . ID EQ ID
    (12) statement -> . ID NOT_EQ ID
    (13) statement -> . ID GREATER ID
    (14) statement -> . ID GREATER_EQ ID
    (15) statement -> . ID LESS ID
    (16) statement -> . ID LESS_EQ ID
    (17) statement -> . NUMBER EQ ID
    (18) statement -> . NUMBER NOT_EQ ID
    (19) statement -> . NUMBER GREATER ID
    (20) statement -> . NUMBER GREATER_EQ ID
    (21) statement -> . NUMBER LESS ID
    (22) statement -> . NUMBER LESS_EQ ID
    (23) statement -> . ID EQ NUMBER
    (24) statement -> . ID NOT_EQ NUMBER
    (25) statement -> . ID GREATER NUMBER
    (26) statement -> . ID GREATER_EQ NUMBER
    (27) statement -> . ID LESS NUMBER
    (28) statement -> . ID LESS_EQ NUMBER

    ID              shift and go to state 24
    NUMBER          shift and go to state 22

    statement                      shift and go to state 23

state 17

    (8) while -> WHILE LPAREN . statement RPAREN LBRACE expression RBRACE
    (11) statement -> . ID EQ ID
    (12) statement -> . ID NOT_EQ ID
    (13) statement -> . ID GREATER ID
    (14) statement -> . ID GREATER_EQ ID
    (15) statement -> . ID LESS ID
    (16) statement -> . ID LESS_EQ ID
    (17) statement -> . NUMBER EQ ID
    (18) statement -> . NUMBER NOT_EQ ID
    (19) statement -> . NUMBER GREATER ID
    (20) statement -> . NUMBER GREATER_EQ ID
    (21) statement -> . NUMBER LESS ID
    (22) statement -> . NUMBER LESS_EQ ID
    (23) statement -> . ID EQ NUMBER
    (24) statement -> . ID NOT_EQ NUMBER
    (25) statement -> . ID GREATER NUMBER
    (26) statement -> . ID GREATER_EQ NUMBER
    (27) statement -> . ID LESS NUMBER
    (28) statement -> . ID LESS_EQ NUMBER

    ID              shift and go to state 24
    NUMBER          shift and go to state 22

    statement                      shift and go to state 25

state 18

    (29) variable -> AUTO ID . SEMICOLON
    (30) variable -> AUTO ID . ASSIGN NUMBER SEMICOLON
    (31) variable -> AUTO ID . ASSIGN STRING SEMICOLON

    SEMICOLON       shift and go to state 26
    ASSIGN          shift and go to state 27


state 19

    (1) function -> MAIN LPAREN RPAREN LBRACE expression RBRACE .

    $end            reduce using rule 1 (function -> MAIN LPAREN RPAREN LBRACE expression RBRACE .)


state 20

    (3) expression -> expression expression .
    (3) expression -> expression . expression
    (2) expression -> . variable
    (3) expression -> . expression expression
    (4) expression -> . while
    (5) expression -> . if
    (6) expression -> . assigned
    (7) expression -> . EPSILON
    (29) variable -> . AUTO ID SEMICOLON
    (30) variable -> . AUTO ID ASSIGN NUMBER SEMICOLON
    (31) variable -> . AUTO ID ASSIGN STRING SEMICOLON
    (8) while -> . WHILE LPAREN statement RPAREN LBRACE expression RBRACE
    (9) if -> . IF LPAREN statement RPAREN LBRACE expression RBRACE
    (10) if -> . IF LPAREN statement RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE
    (32) assigned -> . ID ASSIGN NUMBER SEMICOLON
    (33) assigned -> . ID ASSIGN STRING SEMICOLON

  ! shift/reduce conflict for EPSILON resolved as shift
  ! shift/reduce conflict for AUTO resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    RBRACE          reduce using rule 3 (expression -> expression expression .)
    EPSILON         shift and go to state 7
    AUTO            shift and go to state 11
    WHILE           shift and go to state 8
    IF              shift and go to state 6
    ID              shift and go to state 14

  ! EPSILON         [ reduce using rule 3 (expression -> expression expression .) ]
  ! AUTO            [ reduce using rule 3 (expression -> expression expression .) ]
  ! WHILE           [ reduce using rule 3 (expression -> expression expression .) ]
  ! IF              [ reduce using rule 3 (expression -> expression expression .) ]
  ! ID              [ reduce using rule 3 (expression -> expression expression .) ]

    assigned                       shift and go to state 9
    while                          shift and go to state 10
    variable                       shift and go to state 12
    expression                     shift and go to state 20
    if                             shift and go to state 15

state 21

    (32) assigned -> ID ASSIGN . NUMBER SEMICOLON
    (33) assigned -> ID ASSIGN . STRING SEMICOLON

    NUMBER          shift and go to state 28
    STRING          shift and go to state 29


state 22

    (17) statement -> NUMBER . EQ ID
    (18) statement -> NUMBER . NOT_EQ ID
    (19) statement -> NUMBER . GREATER ID
    (20) statement -> NUMBER . GREATER_EQ ID
    (21) statement -> NUMBER . LESS ID
    (22) statement -> NUMBER . LESS_EQ ID

    EQ              shift and go to state 35
    NOT_EQ          shift and go to state 34
    GREATER         shift and go to state 31
    GREATER_EQ      shift and go to state 33
    LESS            shift and go to state 32
    LESS_EQ         shift and go to state 30


state 23

    (9) if -> IF LPAREN statement . RPAREN LBRACE expression RBRACE
    (10) if -> IF LPAREN statement . RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE

    RPAREN          shift and go to state 36


state 24

    (11) statement -> ID . EQ ID
    (12) statement -> ID . NOT_EQ ID
    (13) statement -> ID . GREATER ID
    (14) statement -> ID . GREATER_EQ ID
    (15) statement -> ID . LESS ID
    (16) statement -> ID . LESS_EQ ID
    (23) statement -> ID . EQ NUMBER
    (24) statement -> ID . NOT_EQ NUMBER
    (25) statement -> ID . GREATER NUMBER
    (26) statement -> ID . GREATER_EQ NUMBER
    (27) statement -> ID . LESS NUMBER
    (28) statement -> ID . LESS_EQ NUMBER

    EQ              shift and go to state 42
    NOT_EQ          shift and go to state 41
    GREATER         shift and go to state 38
    GREATER_EQ      shift and go to state 40
    LESS            shift and go to state 39
    LESS_EQ         shift and go to state 37


state 25

    (8) while -> WHILE LPAREN statement . RPAREN LBRACE expression RBRACE

    RPAREN          shift and go to state 43


state 26

    (29) variable -> AUTO ID SEMICOLON .

    EPSILON         reduce using rule 29 (variable -> AUTO ID SEMICOLON .)
    AUTO            reduce using rule 29 (variable -> AUTO ID SEMICOLON .)
    WHILE           reduce using rule 29 (variable -> AUTO ID SEMICOLON .)
    IF              reduce using rule 29 (variable -> AUTO ID SEMICOLON .)
    ID              reduce using rule 29 (variable -> AUTO ID SEMICOLON .)
    RBRACE          reduce using rule 29 (variable -> AUTO ID SEMICOLON .)


state 27

    (30) variable -> AUTO ID ASSIGN . NUMBER SEMICOLON
    (31) variable -> AUTO ID ASSIGN . STRING SEMICOLON

    NUMBER          shift and go to state 45
    STRING          shift and go to state 44


state 28

    (32) assigned -> ID ASSIGN NUMBER . SEMICOLON

    SEMICOLON       shift and go to state 46


state 29

    (33) assigned -> ID ASSIGN STRING . SEMICOLON

    SEMICOLON       shift and go to state 47


state 30

    (22) statement -> NUMBER LESS_EQ . ID

    ID              shift and go to state 48


state 31

    (19) statement -> NUMBER GREATER . ID

    ID              shift and go to state 49


state 32

    (21) statement -> NUMBER LESS . ID

    ID              shift and go to state 50


state 33

    (20) statement -> NUMBER GREATER_EQ . ID

    ID              shift and go to state 51


state 34

    (18) statement -> NUMBER NOT_EQ . ID

    ID              shift and go to state 52


state 35

    (17) statement -> NUMBER EQ . ID

    ID              shift and go to state 53


state 36

    (9) if -> IF LPAREN statement RPAREN . LBRACE expression RBRACE
    (10) if -> IF LPAREN statement RPAREN . LBRACE expression RBRACE ELSE LBRACE expression RBRACE

    LBRACE          shift and go to state 54


state 37

    (16) statement -> ID LESS_EQ . ID
    (28) statement -> ID LESS_EQ . NUMBER

    ID              shift and go to state 55
    NUMBER          shift and go to state 56


state 38

    (13) statement -> ID GREATER . ID
    (25) statement -> ID GREATER . NUMBER

    ID              shift and go to state 58
    NUMBER          shift and go to state 57


state 39

    (15) statement -> ID LESS . ID
    (27) statement -> ID LESS . NUMBER

    ID              shift and go to state 60
    NUMBER          shift and go to state 59


state 40

    (14) statement -> ID GREATER_EQ . ID
    (26) statement -> ID GREATER_EQ . NUMBER

    ID              shift and go to state 61
    NUMBER          shift and go to state 62


state 41

    (12) statement -> ID NOT_EQ . ID
    (24) statement -> ID NOT_EQ . NUMBER

    ID              shift and go to state 63
    NUMBER          shift and go to state 64


state 42

    (11) statement -> ID EQ . ID
    (23) statement -> ID EQ . NUMBER

    ID              shift and go to state 65
    NUMBER          shift and go to state 66


state 43

    (8) while -> WHILE LPAREN statement RPAREN . LBRACE expression RBRACE

    LBRACE          shift and go to state 67


state 44

    (31) variable -> AUTO ID ASSIGN STRING . SEMICOLON

    SEMICOLON       shift and go to state 68


state 45

    (30) variable -> AUTO ID ASSIGN NUMBER . SEMICOLON

    SEMICOLON       shift and go to state 69


state 46

    (32) assigned -> ID ASSIGN NUMBER SEMICOLON .

    EPSILON         reduce using rule 32 (assigned -> ID ASSIGN NUMBER SEMICOLON .)
    AUTO            reduce using rule 32 (assigned -> ID ASSIGN NUMBER SEMICOLON .)
    WHILE           reduce using rule 32 (assigned -> ID ASSIGN NUMBER SEMICOLON .)
    IF              reduce using rule 32 (assigned -> ID ASSIGN NUMBER SEMICOLON .)
    ID              reduce using rule 32 (assigned -> ID ASSIGN NUMBER SEMICOLON .)
    RBRACE          reduce using rule 32 (assigned -> ID ASSIGN NUMBER SEMICOLON .)


state 47

    (33) assigned -> ID ASSIGN STRING SEMICOLON .

    EPSILON         reduce using rule 33 (assigned -> ID ASSIGN STRING SEMICOLON .)
    AUTO            reduce using rule 33 (assigned -> ID ASSIGN STRING SEMICOLON .)
    WHILE           reduce using rule 33 (assigned -> ID ASSIGN STRING SEMICOLON .)
    IF              reduce using rule 33 (assigned -> ID ASSIGN STRING SEMICOLON .)
    ID              reduce using rule 33 (assigned -> ID ASSIGN STRING SEMICOLON .)
    RBRACE          reduce using rule 33 (assigned -> ID ASSIGN STRING SEMICOLON .)


state 48

    (22) statement -> NUMBER LESS_EQ ID .

    RPAREN          reduce using rule 22 (statement -> NUMBER LESS_EQ ID .)


state 49

    (19) statement -> NUMBER GREATER ID .

    RPAREN          reduce using rule 19 (statement -> NUMBER GREATER ID .)


state 50

    (21) statement -> NUMBER LESS ID .

    RPAREN          reduce using rule 21 (statement -> NUMBER LESS ID .)


state 51

    (20) statement -> NUMBER GREATER_EQ ID .

    RPAREN          reduce using rule 20 (statement -> NUMBER GREATER_EQ ID .)


state 52

    (18) statement -> NUMBER NOT_EQ ID .

    RPAREN          reduce using rule 18 (statement -> NUMBER NOT_EQ ID .)


state 53

    (17) statement -> NUMBER EQ ID .

    RPAREN          reduce using rule 17 (statement -> NUMBER EQ ID .)


state 54

    (9) if -> IF LPAREN statement RPAREN LBRACE . expression RBRACE
    (10) if -> IF LPAREN statement RPAREN LBRACE . expression RBRACE ELSE LBRACE expression RBRACE
    (2) expression -> . variable
    (3) expression -> . expression expression
    (4) expression -> . while
    (5) expression -> . if
    (6) expression -> . assigned
    (7) expression -> . EPSILON
    (29) variable -> . AUTO ID SEMICOLON
    (30) variable -> . AUTO ID ASSIGN NUMBER SEMICOLON
    (31) variable -> . AUTO ID ASSIGN STRING SEMICOLON
    (8) while -> . WHILE LPAREN statement RPAREN LBRACE expression RBRACE
    (9) if -> . IF LPAREN statement RPAREN LBRACE expression RBRACE
    (10) if -> . IF LPAREN statement RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE
    (32) assigned -> . ID ASSIGN NUMBER SEMICOLON
    (33) assigned -> . ID ASSIGN STRING SEMICOLON

    EPSILON         shift and go to state 7
    AUTO            shift and go to state 11
    WHILE           shift and go to state 8
    IF              shift and go to state 6
    ID              shift and go to state 14

    assigned                       shift and go to state 9
    while                          shift and go to state 10
    variable                       shift and go to state 12
    expression                     shift and go to state 70
    if                             shift and go to state 15

state 55

    (16) statement -> ID LESS_EQ ID .

    RPAREN          reduce using rule 16 (statement -> ID LESS_EQ ID .)


state 56

    (28) statement -> ID LESS_EQ NUMBER .

    RPAREN          reduce using rule 28 (statement -> ID LESS_EQ NUMBER .)


state 57

    (25) statement -> ID GREATER NUMBER .

    RPAREN          reduce using rule 25 (statement -> ID GREATER NUMBER .)


state 58

    (13) statement -> ID GREATER ID .

    RPAREN          reduce using rule 13 (statement -> ID GREATER ID .)


state 59

    (27) statement -> ID LESS NUMBER .

    RPAREN          reduce using rule 27 (statement -> ID LESS NUMBER .)


state 60

    (15) statement -> ID LESS ID .

    RPAREN          reduce using rule 15 (statement -> ID LESS ID .)


state 61

    (14) statement -> ID GREATER_EQ ID .

    RPAREN          reduce using rule 14 (statement -> ID GREATER_EQ ID .)


state 62

    (26) statement -> ID GREATER_EQ NUMBER .

    RPAREN          reduce using rule 26 (statement -> ID GREATER_EQ NUMBER .)


state 63

    (12) statement -> ID NOT_EQ ID .

    RPAREN          reduce using rule 12 (statement -> ID NOT_EQ ID .)


state 64

    (24) statement -> ID NOT_EQ NUMBER .

    RPAREN          reduce using rule 24 (statement -> ID NOT_EQ NUMBER .)


state 65

    (11) statement -> ID EQ ID .

    RPAREN          reduce using rule 11 (statement -> ID EQ ID .)


state 66

    (23) statement -> ID EQ NUMBER .

    RPAREN          reduce using rule 23 (statement -> ID EQ NUMBER .)


state 67

    (8) while -> WHILE LPAREN statement RPAREN LBRACE . expression RBRACE
    (2) expression -> . variable
    (3) expression -> . expression expression
    (4) expression -> . while
    (5) expression -> . if
    (6) expression -> . assigned
    (7) expression -> . EPSILON
    (29) variable -> . AUTO ID SEMICOLON
    (30) variable -> . AUTO ID ASSIGN NUMBER SEMICOLON
    (31) variable -> . AUTO ID ASSIGN STRING SEMICOLON
    (8) while -> . WHILE LPAREN statement RPAREN LBRACE expression RBRACE
    (9) if -> . IF LPAREN statement RPAREN LBRACE expression RBRACE
    (10) if -> . IF LPAREN statement RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE
    (32) assigned -> . ID ASSIGN NUMBER SEMICOLON
    (33) assigned -> . ID ASSIGN STRING SEMICOLON

    EPSILON         shift and go to state 7
    AUTO            shift and go to state 11
    WHILE           shift and go to state 8
    IF              shift and go to state 6
    ID              shift and go to state 14

    assigned                       shift and go to state 9
    while                          shift and go to state 10
    variable                       shift and go to state 12
    expression                     shift and go to state 71
    if                             shift and go to state 15

state 68

    (31) variable -> AUTO ID ASSIGN STRING SEMICOLON .

    EPSILON         reduce using rule 31 (variable -> AUTO ID ASSIGN STRING SEMICOLON .)
    AUTO            reduce using rule 31 (variable -> AUTO ID ASSIGN STRING SEMICOLON .)
    WHILE           reduce using rule 31 (variable -> AUTO ID ASSIGN STRING SEMICOLON .)
    IF              reduce using rule 31 (variable -> AUTO ID ASSIGN STRING SEMICOLON .)
    ID              reduce using rule 31 (variable -> AUTO ID ASSIGN STRING SEMICOLON .)
    RBRACE          reduce using rule 31 (variable -> AUTO ID ASSIGN STRING SEMICOLON .)


state 69

    (30) variable -> AUTO ID ASSIGN NUMBER SEMICOLON .

    EPSILON         reduce using rule 30 (variable -> AUTO ID ASSIGN NUMBER SEMICOLON .)
    AUTO            reduce using rule 30 (variable -> AUTO ID ASSIGN NUMBER SEMICOLON .)
    WHILE           reduce using rule 30 (variable -> AUTO ID ASSIGN NUMBER SEMICOLON .)
    IF              reduce using rule 30 (variable -> AUTO ID ASSIGN NUMBER SEMICOLON .)
    ID              reduce using rule 30 (variable -> AUTO ID ASSIGN NUMBER SEMICOLON .)
    RBRACE          reduce using rule 30 (variable -> AUTO ID ASSIGN NUMBER SEMICOLON .)


state 70

    (9) if -> IF LPAREN statement RPAREN LBRACE expression . RBRACE
    (10) if -> IF LPAREN statement RPAREN LBRACE expression . RBRACE ELSE LBRACE expression RBRACE
    (3) expression -> expression . expression
    (2) expression -> . variable
    (3) expression -> . expression expression
    (4) expression -> . while
    (5) expression -> . if
    (6) expression -> . assigned
    (7) expression -> . EPSILON
    (29) variable -> . AUTO ID SEMICOLON
    (30) variable -> . AUTO ID ASSIGN NUMBER SEMICOLON
    (31) variable -> . AUTO ID ASSIGN STRING SEMICOLON
    (8) while -> . WHILE LPAREN statement RPAREN LBRACE expression RBRACE
    (9) if -> . IF LPAREN statement RPAREN LBRACE expression RBRACE
    (10) if -> . IF LPAREN statement RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE
    (32) assigned -> . ID ASSIGN NUMBER SEMICOLON
    (33) assigned -> . ID ASSIGN STRING SEMICOLON

    RBRACE          shift and go to state 72
    EPSILON         shift and go to state 7
    AUTO            shift and go to state 11
    WHILE           shift and go to state 8
    IF              shift and go to state 6
    ID              shift and go to state 14

    assigned                       shift and go to state 9
    while                          shift and go to state 10
    variable                       shift and go to state 12
    expression                     shift and go to state 20
    if                             shift and go to state 15

state 71

    (8) while -> WHILE LPAREN statement RPAREN LBRACE expression . RBRACE
    (3) expression -> expression . expression
    (2) expression -> . variable
    (3) expression -> . expression expression
    (4) expression -> . while
    (5) expression -> . if
    (6) expression -> . assigned
    (7) expression -> . EPSILON
    (29) variable -> . AUTO ID SEMICOLON
    (30) variable -> . AUTO ID ASSIGN NUMBER SEMICOLON
    (31) variable -> . AUTO ID ASSIGN STRING SEMICOLON
    (8) while -> . WHILE LPAREN statement RPAREN LBRACE expression RBRACE
    (9) if -> . IF LPAREN statement RPAREN LBRACE expression RBRACE
    (10) if -> . IF LPAREN statement RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE
    (32) assigned -> . ID ASSIGN NUMBER SEMICOLON
    (33) assigned -> . ID ASSIGN STRING SEMICOLON

    RBRACE          shift and go to state 73
    EPSILON         shift and go to state 7
    AUTO            shift and go to state 11
    WHILE           shift and go to state 8
    IF              shift and go to state 6
    ID              shift and go to state 14

    assigned                       shift and go to state 9
    while                          shift and go to state 10
    variable                       shift and go to state 12
    expression                     shift and go to state 20
    if                             shift and go to state 15

state 72

    (9) if -> IF LPAREN statement RPAREN LBRACE expression RBRACE .
    (10) if -> IF LPAREN statement RPAREN LBRACE expression RBRACE . ELSE LBRACE expression RBRACE

    EPSILON         reduce using rule 9 (if -> IF LPAREN statement RPAREN LBRACE expression RBRACE .)
    AUTO            reduce using rule 9 (if -> IF LPAREN statement RPAREN LBRACE expression RBRACE .)
    WHILE           reduce using rule 9 (if -> IF LPAREN statement RPAREN LBRACE expression RBRACE .)
    IF              reduce using rule 9 (if -> IF LPAREN statement RPAREN LBRACE expression RBRACE .)
    ID              reduce using rule 9 (if -> IF LPAREN statement RPAREN LBRACE expression RBRACE .)
    RBRACE          reduce using rule 9 (if -> IF LPAREN statement RPAREN LBRACE expression RBRACE .)
    ELSE            shift and go to state 74


state 73

    (8) while -> WHILE LPAREN statement RPAREN LBRACE expression RBRACE .

    EPSILON         reduce using rule 8 (while -> WHILE LPAREN statement RPAREN LBRACE expression RBRACE .)
    AUTO            reduce using rule 8 (while -> WHILE LPAREN statement RPAREN LBRACE expression RBRACE .)
    WHILE           reduce using rule 8 (while -> WHILE LPAREN statement RPAREN LBRACE expression RBRACE .)
    IF              reduce using rule 8 (while -> WHILE LPAREN statement RPAREN LBRACE expression RBRACE .)
    ID              reduce using rule 8 (while -> WHILE LPAREN statement RPAREN LBRACE expression RBRACE .)
    RBRACE          reduce using rule 8 (while -> WHILE LPAREN statement RPAREN LBRACE expression RBRACE .)


state 74

    (10) if -> IF LPAREN statement RPAREN LBRACE expression RBRACE ELSE . LBRACE expression RBRACE

    LBRACE          shift and go to state 75


state 75

    (10) if -> IF LPAREN statement RPAREN LBRACE expression RBRACE ELSE LBRACE . expression RBRACE
    (2) expression -> . variable
    (3) expression -> . expression expression
    (4) expression -> . while
    (5) expression -> . if
    (6) expression -> . assigned
    (7) expression -> . EPSILON
    (29) variable -> . AUTO ID SEMICOLON
    (30) variable -> . AUTO ID ASSIGN NUMBER SEMICOLON
    (31) variable -> . AUTO ID ASSIGN STRING SEMICOLON
    (8) while -> . WHILE LPAREN statement RPAREN LBRACE expression RBRACE
    (9) if -> . IF LPAREN statement RPAREN LBRACE expression RBRACE
    (10) if -> . IF LPAREN statement RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE
    (32) assigned -> . ID ASSIGN NUMBER SEMICOLON
    (33) assigned -> . ID ASSIGN STRING SEMICOLON

    EPSILON         shift and go to state 7
    AUTO            shift and go to state 11
    WHILE           shift and go to state 8
    IF              shift and go to state 6
    ID              shift and go to state 14

    assigned                       shift and go to state 9
    while                          shift and go to state 10
    variable                       shift and go to state 12
    expression                     shift and go to state 76
    if                             shift and go to state 15

state 76

    (10) if -> IF LPAREN statement RPAREN LBRACE expression RBRACE ELSE LBRACE expression . RBRACE
    (3) expression -> expression . expression
    (2) expression -> . variable
    (3) expression -> . expression expression
    (4) expression -> . while
    (5) expression -> . if
    (6) expression -> . assigned
    (7) expression -> . EPSILON
    (29) variable -> . AUTO ID SEMICOLON
    (30) variable -> . AUTO ID ASSIGN NUMBER SEMICOLON
    (31) variable -> . AUTO ID ASSIGN STRING SEMICOLON
    (8) while -> . WHILE LPAREN statement RPAREN LBRACE expression RBRACE
    (9) if -> . IF LPAREN statement RPAREN LBRACE expression RBRACE
    (10) if -> . IF LPAREN statement RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE
    (32) assigned -> . ID ASSIGN NUMBER SEMICOLON
    (33) assigned -> . ID ASSIGN STRING SEMICOLON

    RBRACE          shift and go to state 77
    EPSILON         shift and go to state 7
    AUTO            shift and go to state 11
    WHILE           shift and go to state 8
    IF              shift and go to state 6
    ID              shift and go to state 14

    assigned                       shift and go to state 9
    while                          shift and go to state 10
    variable                       shift and go to state 12
    expression                     shift and go to state 20
    if                             shift and go to state 15

state 77

    (10) if -> IF LPAREN statement RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE .

    EPSILON         reduce using rule 10 (if -> IF LPAREN statement RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE .)
    AUTO            reduce using rule 10 (if -> IF LPAREN statement RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE .)
    WHILE           reduce using rule 10 (if -> IF LPAREN statement RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE .)
    IF              reduce using rule 10 (if -> IF LPAREN statement RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE .)
    ID              reduce using rule 10 (if -> IF LPAREN statement RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE .)
    RBRACE          reduce using rule 10 (if -> IF LPAREN statement RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for EPSILON in state 20 resolved as shift
WARNING: shift/reduce conflict for AUTO in state 20 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 20 resolved as shift
WARNING: shift/reduce conflict for IF in state 20 resolved as shift
WARNING: shift/reduce conflict for ID in state 20 resolved as shift
