
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AMPERSAND ASSIGN BOOL COMMA ELSE ENUM EQ FALSE GREATER GREATER_EQ ID IF INT LBRACE LESS LESS_EQ LPAREN MAIN NOT_EQ NUMBER RBRACE READF RPAREN SEMICOLON STR STRING TRUE VOID WHILE WRITELNstart : functionfunction : constants VOID MAIN LPAREN RPAREN LBRACE expressions RBRACE constants\n    expressions :     expressions expression\n                    | expression\n    \n    expression :   variable\n                 | while\n                 | if\n                 | assigned\n                 | print\n                 | get\n                 | empty\n    \n    while : WHILE LPAREN statement RPAREN LBRACE expressions RBRACE\n    \n    if :   IF LPAREN statement RPAREN LBRACE expressions RBRACE\n         | IF LPAREN statement RPAREN LBRACE expressions RBRACE ELSE LBRACE expression RBRACE\n    \n    statement :   ID EQ ID\n                | ID NOT_EQ ID\n                | ID GREATER ID\n                | ID GREATER_EQ ID\n                | ID LESS ID\n                | ID LESS_EQ ID\n                | NUMBER EQ ID\n                | NUMBER NOT_EQ ID\n                | NUMBER GREATER ID\n                | NUMBER GREATER_EQ ID\n                | NUMBER LESS ID\n                | NUMBER LESS_EQ ID\n                | ID EQ NUMBER\n                | ID NOT_EQ NUMBER\n                | ID GREATER NUMBER\n                | ID GREATER_EQ NUMBER\n                | ID LESS NUMBER\n                | ID LESS_EQ NUMBER\n                | ID EQ boolean\n                | ID NOT_EQ boolean\n                | boolean EQ ID\n                | boolean NOT_EQ ID\n    \n    variable :   INT ID SEMICOLON\n               | INT ID ASSIGN NUMBER SEMICOLON\n               | STR ID ASSIGN STRING SEMICOLON\n               | STR ID SEMICOLON\n               | BOOL ID SEMICOLON\n               | BOOL ID ASSIGN boolean SEMICOLON\n    \n    boolean :   TRUE\n              | FALSE\n    \n    constants :   constants constant\n                | constants variable\n                | constant\n                | variable\n    \n    constant :    ENUM ID ASSIGN NUMBER SEMICOLON\n                | ENUM ID ASSIGN STRING SEMICOLON\n                | ENUM ID ASSIGN boolean SEMICOLON\n                | ENUM ID SEMICOLON\n                | empty\n    \n    print :   WRITELN LPAREN ID RPAREN SEMICOLON\n            | WRITELN LPAREN STRING RPAREN SEMICOLON\n            | WRITELN LPAREN NUMBER RPAREN SEMICOLON\n            | WRITELN LPAREN boolean RPAREN SEMICOLON\n    \n    get :     READF LPAREN STRING COMMA AMPERSAND ID RPAREN SEMICOLON\n    \n    assigned :    ID ASSIGN NUMBER SEMICOLON\n                | ID ASSIGN STRING SEMICOLON\n                | ID ASSIGN boolean SEMICOLON\n    empty :'
    
_lr_action_items = {'LESS_EQ':([66,68,],[81,88,]),'LPAREN':([22,45,51,54,55,],[33,58,61,63,64,]),'LESS':([66,68,],[83,90,]),'VOID':([0,1,4,7,8,14,15,18,20,23,25,36,37,38,39,41,42,],[-62,-47,-53,-48,13,-46,-45,-40,-52,-37,-41,-39,-50,-49,-51,-38,-42,]),'NUMBER':([21,24,58,61,62,63,88,89,90,91,92,93,],[30,34,66,71,75,66,113,114,116,119,120,123,]),'GREATER_EQ':([66,68,],[84,91,]),'WHILE':([18,23,25,36,41,42,43,44,46,47,48,49,50,52,56,57,60,98,99,100,111,126,127,128,129,130,132,133,135,136,139,140,142,],[-40,-37,-41,-39,-38,-42,45,-8,45,-7,-9,-11,-10,-5,-6,-4,-3,-60,-59,-61,45,-55,-56,-57,-54,45,45,45,-12,-13,-58,45,-14,]),'TRUE':([21,26,58,61,62,63,92,93,],[32,32,32,32,32,32,32,32,]),'STRING':([19,21,61,62,64,],[27,29,70,74,78,]),'RPAREN':([28,32,33,67,70,71,72,73,77,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,134,],[-44,-43,40,87,94,95,96,97,101,-36,-35,-26,-23,-25,-24,-22,-21,-20,-32,-29,-17,-31,-19,-18,-30,-28,-34,-16,-27,-33,-15,137,]),'SEMICOLON':([11,12,16,17,27,28,29,30,31,32,34,35,74,75,76,94,95,96,97,137,],[18,20,23,25,36,-44,37,38,39,-43,41,42,98,99,100,126,127,128,129,139,]),'COMMA':([78,],[102,]),'NOT_EQ':([28,32,65,66,68,],[-44,-43,79,85,92,]),'ASSIGN':([11,12,16,17,53,],[19,21,24,26,62,]),'$end':([1,3,4,5,7,14,15,18,20,23,25,36,37,38,39,41,42,59,69,],[-47,0,-53,-1,-48,-46,-45,-40,-52,-37,-41,-39,-50,-49,-51,-38,-42,-62,-2,]),'RBRACE':([18,23,25,36,41,42,43,44,46,47,48,49,50,52,56,57,60,98,99,100,111,126,127,128,129,130,132,133,135,136,139,140,141,142,],[-40,-37,-41,-39,-38,-42,-62,-8,59,-7,-9,-11,-10,-5,-6,-4,-3,-60,-59,-61,-62,-55,-56,-57,-54,-62,135,136,-12,-13,-58,-62,142,-14,]),'ENUM':([0,1,4,7,8,14,15,18,20,23,25,36,37,38,39,41,42,59,69,],[6,-47,-53,-48,6,-46,-45,-40,-52,-37,-41,-39,-50,-49,-51,-38,-42,6,6,]),'ELSE':([136,],[138,]),'WRITELN':([18,23,25,36,41,42,43,44,46,47,48,49,50,52,56,57,60,98,99,100,111,126,127,128,129,130,132,133,135,136,139,140,142,],[-40,-37,-41,-39,-38,-42,51,-8,51,-7,-9,-11,-10,-5,-6,-4,-3,-60,-59,-61,51,-55,-56,-57,-54,51,51,51,-12,-13,-58,51,-14,]),'AMPERSAND':([102,],[131,]),'STR':([0,1,4,7,8,14,15,18,20,23,25,36,37,38,39,41,42,43,44,46,47,48,49,50,52,56,57,59,60,69,98,99,100,111,126,127,128,129,130,132,133,135,136,139,140,142,],[2,-47,-53,-48,2,-46,-45,-40,-52,-37,-41,-39,-50,-49,-51,-38,-42,2,-8,2,-7,-9,-11,-10,-5,-6,-4,2,-3,2,-60,-59,-61,2,-55,-56,-57,-54,2,2,2,-12,-13,-58,2,-14,]),'EQ':([28,32,65,66,68,],[-44,-43,80,86,93,]),'ID':([2,6,9,10,18,23,25,36,41,42,43,44,46,47,48,49,50,52,56,57,58,60,61,63,79,80,81,82,83,84,85,86,88,89,90,91,92,93,98,99,100,111,126,127,128,129,130,131,132,133,135,136,139,140,142,],[11,12,16,17,-40,-37,-41,-39,-38,-42,53,-8,53,-7,-9,-11,-10,-5,-6,-4,68,-3,73,68,103,104,105,106,107,108,109,110,112,115,117,118,122,125,-60,-59,-61,53,-55,-56,-57,-54,53,134,53,53,-12,-13,-58,53,-14,]),'IF':([18,23,25,36,41,42,43,44,46,47,48,49,50,52,56,57,60,98,99,100,111,126,127,128,129,130,132,133,135,136,139,140,142,],[-40,-37,-41,-39,-38,-42,54,-8,54,-7,-9,-11,-10,-5,-6,-4,-3,-60,-59,-61,54,-55,-56,-57,-54,54,54,54,-12,-13,-58,54,-14,]),'LBRACE':([40,87,101,138,],[43,111,130,140,]),'FALSE':([21,26,58,61,62,63,92,93,],[28,28,28,28,28,28,28,28,]),'GREATER':([66,68,],[82,89,]),'READF':([18,23,25,36,41,42,43,44,46,47,48,49,50,52,56,57,60,98,99,100,111,126,127,128,129,130,132,133,135,136,139,140,142,],[-40,-37,-41,-39,-38,-42,55,-8,55,-7,-9,-11,-10,-5,-6,-4,-3,-60,-59,-61,55,-55,-56,-57,-54,55,55,55,-12,-13,-58,55,-14,]),'INT':([0,1,4,7,8,14,15,18,20,23,25,36,37,38,39,41,42,43,44,46,47,48,49,50,52,56,57,59,60,69,98,99,100,111,126,127,128,129,130,132,133,135,136,139,140,142,],[9,-47,-53,-48,9,-46,-45,-40,-52,-37,-41,-39,-50,-49,-51,-38,-42,9,-8,9,-7,-9,-11,-10,-5,-6,-4,9,-3,9,-60,-59,-61,9,-55,-56,-57,-54,9,9,9,-12,-13,-58,9,-14,]),'BOOL':([0,1,4,7,8,14,15,18,20,23,25,36,37,38,39,41,42,43,44,46,47,48,49,50,52,56,57,59,60,69,98,99,100,111,126,127,128,129,130,132,133,135,136,139,140,142,],[10,-47,-53,-48,10,-46,-45,-40,-52,-37,-41,-39,-50,-49,-51,-38,-42,10,-8,10,-7,-9,-11,-10,-5,-6,-4,10,-3,10,-60,-59,-61,10,-55,-56,-57,-54,10,10,10,-12,-13,-58,10,-14,]),'MAIN':([13,],[22,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'function':([0,],[5,]),'constant':([0,8,59,69,],[1,15,1,15,]),'get':([43,46,111,130,132,133,140,],[50,50,50,50,50,50,50,]),'print':([43,46,111,130,132,133,140,],[48,48,48,48,48,48,48,]),'assigned':([43,46,111,130,132,133,140,],[44,44,44,44,44,44,44,]),'start':([0,],[3,]),'while':([43,46,111,130,132,133,140,],[56,56,56,56,56,56,56,]),'boolean':([21,26,58,61,62,63,92,93,],[31,35,65,72,76,65,121,124,]),'empty':([0,8,43,46,59,69,111,130,132,133,140,],[4,4,49,49,4,4,49,49,49,49,49,]),'statement':([58,63,],[67,77,]),'variable':([0,8,43,46,59,69,111,130,132,133,140,],[7,14,52,52,7,14,52,52,52,52,52,]),'expressions':([43,111,130,],[46,132,133,]),'expression':([43,46,111,130,132,133,140,],[57,60,57,57,60,60,141,]),'constants':([0,59,],[8,69,]),'if':([43,46,111,130,132,133,140,],[47,47,47,47,47,47,47,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> function','start',1,'p_start','calc.py',128),
  ('function -> constants VOID MAIN LPAREN RPAREN LBRACE expressions RBRACE constants','function',9,'p_function','calc.py',133),
  ('expressions -> expressions expression','expressions',2,'p_expressions','calc.py',139),
  ('expressions -> expression','expressions',1,'p_expressions','calc.py',140),
  ('expression -> variable','expression',1,'p_expression','calc.py',146),
  ('expression -> while','expression',1,'p_expression','calc.py',147),
  ('expression -> if','expression',1,'p_expression','calc.py',148),
  ('expression -> assigned','expression',1,'p_expression','calc.py',149),
  ('expression -> print','expression',1,'p_expression','calc.py',150),
  ('expression -> get','expression',1,'p_expression','calc.py',151),
  ('expression -> empty','expression',1,'p_expression','calc.py',152),
  ('while -> WHILE LPAREN statement RPAREN LBRACE expressions RBRACE','while',7,'p_while','calc.py',158),
  ('if -> IF LPAREN statement RPAREN LBRACE expressions RBRACE','if',7,'p_if','calc.py',164),
  ('if -> IF LPAREN statement RPAREN LBRACE expressions RBRACE ELSE LBRACE expression RBRACE','if',11,'p_if','calc.py',165),
  ('statement -> ID EQ ID','statement',3,'p_statement','calc.py',171),
  ('statement -> ID NOT_EQ ID','statement',3,'p_statement','calc.py',172),
  ('statement -> ID GREATER ID','statement',3,'p_statement','calc.py',173),
  ('statement -> ID GREATER_EQ ID','statement',3,'p_statement','calc.py',174),
  ('statement -> ID LESS ID','statement',3,'p_statement','calc.py',175),
  ('statement -> ID LESS_EQ ID','statement',3,'p_statement','calc.py',176),
  ('statement -> NUMBER EQ ID','statement',3,'p_statement','calc.py',177),
  ('statement -> NUMBER NOT_EQ ID','statement',3,'p_statement','calc.py',178),
  ('statement -> NUMBER GREATER ID','statement',3,'p_statement','calc.py',179),
  ('statement -> NUMBER GREATER_EQ ID','statement',3,'p_statement','calc.py',180),
  ('statement -> NUMBER LESS ID','statement',3,'p_statement','calc.py',181),
  ('statement -> NUMBER LESS_EQ ID','statement',3,'p_statement','calc.py',182),
  ('statement -> ID EQ NUMBER','statement',3,'p_statement','calc.py',183),
  ('statement -> ID NOT_EQ NUMBER','statement',3,'p_statement','calc.py',184),
  ('statement -> ID GREATER NUMBER','statement',3,'p_statement','calc.py',185),
  ('statement -> ID GREATER_EQ NUMBER','statement',3,'p_statement','calc.py',186),
  ('statement -> ID LESS NUMBER','statement',3,'p_statement','calc.py',187),
  ('statement -> ID LESS_EQ NUMBER','statement',3,'p_statement','calc.py',188),
  ('statement -> ID EQ boolean','statement',3,'p_statement','calc.py',189),
  ('statement -> ID NOT_EQ boolean','statement',3,'p_statement','calc.py',190),
  ('statement -> boolean EQ ID','statement',3,'p_statement','calc.py',191),
  ('statement -> boolean NOT_EQ ID','statement',3,'p_statement','calc.py',192),
  ('variable -> INT ID SEMICOLON','variable',3,'p_variable','calc.py',198),
  ('variable -> INT ID ASSIGN NUMBER SEMICOLON','variable',5,'p_variable','calc.py',199),
  ('variable -> STR ID ASSIGN STRING SEMICOLON','variable',5,'p_variable','calc.py',200),
  ('variable -> STR ID SEMICOLON','variable',3,'p_variable','calc.py',201),
  ('variable -> BOOL ID SEMICOLON','variable',3,'p_variable','calc.py',202),
  ('variable -> BOOL ID ASSIGN boolean SEMICOLON','variable',5,'p_variable','calc.py',203),
  ('boolean -> TRUE','boolean',1,'p_boolean','calc.py',209),
  ('boolean -> FALSE','boolean',1,'p_boolean','calc.py',210),
  ('constants -> constants constant','constants',2,'p_constants','calc.py',216),
  ('constants -> constants variable','constants',2,'p_constants','calc.py',217),
  ('constants -> constant','constants',1,'p_constants','calc.py',218),
  ('constants -> variable','constants',1,'p_constants','calc.py',219),
  ('constant -> ENUM ID ASSIGN NUMBER SEMICOLON','constant',5,'p_constant','calc.py',225),
  ('constant -> ENUM ID ASSIGN STRING SEMICOLON','constant',5,'p_constant','calc.py',226),
  ('constant -> ENUM ID ASSIGN boolean SEMICOLON','constant',5,'p_constant','calc.py',227),
  ('constant -> ENUM ID SEMICOLON','constant',3,'p_constant','calc.py',228),
  ('constant -> empty','constant',1,'p_constant','calc.py',229),
  ('print -> WRITELN LPAREN ID RPAREN SEMICOLON','print',5,'p_print','calc.py',236),
  ('print -> WRITELN LPAREN STRING RPAREN SEMICOLON','print',5,'p_print','calc.py',237),
  ('print -> WRITELN LPAREN NUMBER RPAREN SEMICOLON','print',5,'p_print','calc.py',238),
  ('print -> WRITELN LPAREN boolean RPAREN SEMICOLON','print',5,'p_print','calc.py',239),
  ('get -> READF LPAREN STRING COMMA AMPERSAND ID RPAREN SEMICOLON','get',8,'p_get','calc.py',245),
  ('assigned -> ID ASSIGN NUMBER SEMICOLON','assigned',4,'p_assigned','calc.py',252),
  ('assigned -> ID ASSIGN STRING SEMICOLON','assigned',4,'p_assigned','calc.py',253),
  ('assigned -> ID ASSIGN boolean SEMICOLON','assigned',4,'p_assigned','calc.py',254),
  ('empty -> <empty>','empty',0,'p_empty','calc.py',259),
]
